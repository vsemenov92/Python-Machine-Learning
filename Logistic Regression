#Import Data
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
%matplotlib inline
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report

#Get Data
ad_data = pd.read_csv('advertising.csv')

#Explore through Seaborn
sns.set_style('whitegrid')
ad_data['Age'].hist(bins=30)
plt.xlabel('Age')

sns.jointplot(x= 'Area Income' , y='Age' , data= ad_data)

sns.jointplot(x='Age',y='Daily Time Spent on Site',data=ad_data,color='red',kind='kde');

sns.jointplot(x='Daily Time Spent on Site',y='Daily Internet Usage',data=ad_data,color='green');

sns.pairplot(ad_data,hue='Clicked on Ad',palette='bwr')

#Split the Data
x = ad_data[['Daily Time Spent on Site', 'Age', 'Area Income', 'Daily Internet Usage', 'Male']]
y = ad_data['Clicked on Ad']
X_train, X_test, y_train, y_test = train_test_split(x,y,test_size=.3,random_state=101)

logmodel = LogisticRegression()
logmodel.fit(X_train,y_train)

#Train and Fit Model
logmodel = LogisticRegression()
logmodel.fit(X_train,y_train)

#Predictions and Evaluations
predictions = logmodel.predict(X_test)

print(classification_report(y_test, predictions))

from sklearn.metrics import confusion_matrix

confusion_matrix(y_test, predictions)
